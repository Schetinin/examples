package com.schetinin.examples;

import org.junit.Test;

import java.math.BigInteger;
import java.util.function.Function;

import static org.junit.Assert.*;

/**
 * Created by Юрий on 11.12.2017.
 */
public class FactorialTest {
    private byte[] bytes = new byte[]{31, -73, -110, 73, 93, 125, 39, -59, 92, -83, 118, -8, -69, -77, -103, -125, -121, 79, 43, 78, -81, -58, 121,
            18, -57, -19, 110, 4, -90, -115, 70, 59, -103, -12, -128, 82, -34, 70, -114, -79, -87, 52, 122, 83, 103, 77, -31, -43, -42, 94, -53,
            34, -70, -41, 3, 123, -54, 13, 49, 90, 72, 82, -40, 10, -43, 95, -6, -61, -107, 83, 24, -71, 98, 56, -23, -88, -31, 72, 71, 76, -47, 112,
            12, 64, 61, -20, 74, -83, 32, 69, -21, -103, -107, -5, 70, 85, -7, 85, 112, 81, 95, 123, 105, 52, 16, -67, 29, 89, 63, -10, 112, 15, -76,
            -84, 106, -96, -70, -100, 10, -48, 114, 68, -82, 34, -115, -41, 44, -9, -4, -89, -122, 93, -96, -16, -91, 82, 96, 81, 93, 57, -38, 16,
            50, -1, -72, -55, 77, -33, 48, -11, 102, 60, 127, -87, -25, 60, 82, -48, 119, 65, -109, 22, 5, 92, 37, 22, 99, -80, -32, 101, 0, 32, -71,
            92, -31, -63, 65, -93, 94, 94, -48, -68, 11, 100, -81, 49, -96, -96, 90, 39, 85, -31, -86, 34, 114, 17, 21, 76, 83, -65, 68, 64, -125,
            117, 7, 74, -10, 1, 117, -7, 7, -96, -10, 98, -28, 56, 9, 39, 117, 121, 53, -125, 84, 109, -78, -6, -98, 79, -15, -30, -128, 17, -97, 112,
            113, 32, -49, -86, -118, 64, -26, 17, 41, 23, 29, -109, 107, 67, -92, 109, -120, -57, 110, 87, -57, 102, 80, -39, -47, 25, 36, -91, -60,
            -47, 106, -91, -118, 31, 23, -62, -98, 78, 4, -127, -110, -90, -2, 63, 99, -33, 95, 67, 4, -48, -34, -109, -80, -103, -41, 54, 113, 37,
            6, 52, 123, 82, 86, 25, -118, -58, 4, 98, -70, -65, 55, -119, -84, -95, -45, -53, -17, 30, -95, 42, -59, 118, 121, 107, 52, -88, 0, -62,
            -26, 35, 80, -10, -25, 63, -81, -83, -22, -36, 118, -2, 98, -128, -96, -66, 13, 66, 6, 43, 78, -92, -127, 109, 86, 124, 16, 35, -75, -50,
            -91, -4, -123, -38, -119, -25, -19, 34, -82, 22, 26, 80, -30, 5, 97, -121, -24, -76, 72, 56, -9, 28, 41, 61, -89, -80, 44, -83, 22, 85, 56
            , 82, -92, -94, 28, 27, -48, -22, 116, 38, 112, 96, -86, 11, 47, -114, 66, 122, 18, -13, 54, 114, 68, 37, 1, 67, -13, 118, 90, 66, 46, -10,
            53, 26, 6, -100, 26, 75, -125, 39, 79, 89, 47, -109, -58, -45, -43, -110, -42, -11, 79, 54, 58, -58, 63, 121, -23, 122, -113, -124, -59,
            121, 34, 103, -85, 3, -15, 41, -83, 19, -123, -124, 52, -17, 66, -88, -87, -68, -16, 65, -54, 59, -124, 121, 86, -113, -14, 80, 77, 64,
            90, 119, -25, 76, -71, -67, -63, 45, -93, 106, 8, -6, -62, -56, 82, 109, -58, -100, 29, 100, -108, -67, 70, 76, 82, -44, -66, 25, -11,
            -5, 113, -100, -26, -66, 61, -49, -32, -119, -123, -43, -75, 45, -91, -20, 58, -117, -47, -8, 0, -115, -77, 60, 2, -57, -69, -101,
            102, 44, -78, 110, 19, 62, 63, -31, -26, 70, 58, 70, 98, -57, 11, 88, 44, 59, -60, 33, -56, 118, -74, 30, -59, 68, 110, -34, 75, -94,
            -97, 101, -68, 28, 84, -28, 120, 58, -109, 67, 3, 62, -72, 91, 27, -43, -99, -72, -45, 20, 123, 118, -20, -88, 31, -29, -36, 60, -97,
            -89, 6, -9, -122, -1, 80, -108, 11, 4, -20, 107, 65, -16, 72, 33, -52, 85, -80, -60, -103, -106, 109, 12, 2, 58, -95, -106, -88, 0, -110,
            -90, 125, 40, -125, -56, 81, 121, 8, 38, 10, -104, 124, 74, -28, 71, -109, -87, -43, -47, 85, 23, -51, -43, -119, -127, 34, 85, 44, -38,
            111, 35, -94, -60, 3, -30, -68, -8, 47, -109, 120, 11, 14, 88, -118, -52, 3, 62, 84, -59, -74, 27, -111, 31, 94, -88, -58, 14, -36, -58,
            81, 34, 77, 3, -104, 116, 68, -10, -73, -90, -25, 7, 100, -21, -117, -31, 62, 42, -37, 121, -21, -31, -118, 105, 76, 37, -122, 88, -33,
            -35, 4, -78, 52, -49, 99, -22, -104, -42, 79, -92, 79, 125, -127, 86, -65, -29, 107, 24, 19, -42, 115, 2, 117, -23, 53, -102, 73, 102,
            -122, 125, -97, 43, 85, 76, 7, -41, -86, -19, 19, -91, 124, -66, 103, 16, 82, 107, 84, -81, 62, 124, -99, 23, -55, 8, 89, 86, 0, -2, 105,
            0, 13, 96, -61, 79, 111, -107, 10, -69, -9, 79, -5, 83, -90, 62, -123, 7, -68, -43, -116, 101, 102, 20, -85, 81, -119, 69, 15, -114, -53,
            -62, 45, -90, -118, 24, -13, 104, -128, 81, 91, 98, -20, -84, 64, 118, 2, 6, -46, 103, 101, 8, -70, 61, 104, -115, 49, 81, 2, -51, 56, 55,
            41, -27, 38, 122, -120, -97, -102, 57, -27, -72, 6, -13, 2, 83, 52, 15, -73, -46, 38, -104, 60, -25, -116, 60, -102, -113, 43, 89, 101, -8,
            -9, 115, 89, -81, -3, -72, 71, 109, 106, -116, -31, -70, -113, -31, 34, -102, -19, 112, 52, -79, 24, 50, -42, -47, 58, -55, 16, 111, -94,
            74, -128, 61, 93, 2, 6, 38, -120, 41, 73, 51, 11, -38, 77, -66, -85, 70, 66, -14, -5, -75, -79, -92, 55, 58, 30, 88, -32, 111, -87, -105,
            -38, 90, -120, -72, 10, -88, 34, 63, -14, -54, -4, -26, 62, 21, 126, -36, 29, 27, -119, 77, -47, 48, 115, 108, 54, -94, -108, 125, 86,
            -117, -47, -57, -71, -23, -17, 121, -4, -72, -121, 81, 33, -24, -51, 109, -121, 10, 101, 112, -39, -70, -19, 44, -52, 14, -12, 91, 81,
            87, -34, -80, -46, 26, -15, 15, -12, -44, 68, 101, 118, -33, -114, -115, 48, 126, -11, -21, -68, -47, 106, -108, -114, -21, 63, -127, 109,
            84, 69, 4, -50, 5, -66, -75, -112, -37, 39, 89, 4, 33, -121, -39, 87, -60, 40, 82, -109, 28, 112, -99, 25, 103, 30, 44, 59, -105, 77, 112
            , -125, 118, -120, 26, -104, 61, 65, -18, -36, -55, -57, 11, -29, -53, 62, 5, -117, 9, -117, -82, 91, -65, 38, -17, -11, 2, -86, 104, 109
            , -10, -124, 37, 104, 1, 104, 77, 32, -4, 127, 71, -93, -120, -91, 94, -93, -15, 66, 127, 83, -56, -88, -17, 121, 93, 111, -100, 92, -74,
            83, 79, 2, 21, 108, -86, -112, -64, 114, -70, -109, 37, -108, 79, 71, 17, 111, -9, -87, 10, -89, -21, -117, -94, -11, 67, 15, -71, -84, -3,
            -127, -122, 117, -121, 41, 88, -99, -17, -71, -50, -112, -76, 55, 14, -121, -108, 127, 20, 13, 105, 2, 55, 26, -104, -87, -37, -113, 11, 95
            , 19, -35, -77, 40, -29, 20, -40, -10, -78, 113, 63, -44, 61, -117, -63, -38, -12, -78, -63, -79, -45, 31, -115, 122, -5, 122, -56, -63, 113
            , 54, -66, -34, 64, -109, 61, 52, -35, 13, 98, -92, 5, -41, -112, -55, -26, -79, -38, 44, 121, -42, 52, -17, -94, 97, -48, -8, 76, 123,
            -46, 103, -118, 67, -124, -60, 50, -41, 2, -67, 2, -100, 78, 71, -38, 18, -48, -48, -4, 61, 112, -10, 1, -116, 30, 31, -36, 52, 59, 26,
            -57, 124, -75, -118, 118, -60, -44, 21, 52, -47, 42, 15, 59, -3, -86, 5, 96, -79, 95, 7, 30, -101, -95, -66, -85, 41, -76, -120, -14,
            -111, 47, -53, -37, 25, -102, 114, -127, -113, 79, 125, 123, 20, -96, -14, -128, 34, -87, -48, -12, -7, 9, -21, -49, 45, -69, 118, -105,
            114, 108, -126, -1, -49, 110, 35, -72, -11, 0, -35, 42, -75, -41, 32, -59, 18, 59, -108, -24, 13, 71, 98, -113, -4, -72, 103, -71, 102,
            -110, -77, 35, 24, -128, 120, -102, 52, 107, 42, 126, -85, 13, 19, -80, -78, -31, 100, 15, 10, -19, 51, -46, 39, 97, 108, -124, 89, 76,
            34, -113, -60, -57, 102, 92, -56, 80, 27, 9, 110, 7, 122, 68, -50, -66, 29, -124, 93, -9, 19, -57, -80, -26, -24, -79, -96, 20, 39, -76,
            29, -98, -7, 7, -83, 45, -9, -36, 31, -65, 46, -9, 48, 112, 102, -85, -28, -11, -14, 54, 65, 64, 74, 75, -48, 109, -47, 81, 50, -75, 90,
            -121, 84, 81, -28, 48, 54, -47, 106, 98, 101, -63, 0, 24, -61, -103, -95, -30, 67, 56, -14, -35, -68, -54, 49, 50, 48, 55, -24, -99, -30,
            -2, 7, -119, 7, 58, -112, 11, 13, 45, -32, 53, -87, -97, 1, -21, -102, 105, -124, -124, -95, -18, 65, -20, -61, -117, -32, 101, 3, -52,
            -67, 6, 67, 74, -13, 73, 70, 40, 91, 62, -94, 83, 54, -18, 89, 111, 122, -39, -42, 9, -29, -91, 99, 48, -39, 93, 73, -87, -126, -114,
            -127, -29, -61, 89, -38, 103, -84, 30, -52, -112, -113, 89, -106, -84, -126, -36, 111, -74, -90, 84, 124, 60, -16, 96, -14, -49, -20,
            51, 17, 83, 100, 24, -20, 123, 39, 110, -5, 116, -103, 106, -119, -14, -94, -21, -73, 54, -69, -15, -107, 72, 106, 87, -48, 89, 10,
            116, -123, 91, -120, -77, -101, -98, 34, -121, -90, -88, -20, 63, -60, -61, 20, -73, 37, 122, -21, -115, 0, -109, -125, -118, -42,
            -73, 57, 82, 3, -55, -40, 91, -88, 14, -12, -20, 106, -98, 53, 104, 41, -52, 34, 112, 115, 73, -108, 97, -76, 75, 6, -69, 6, 108,
            -67, -88, -117, 23, 30, 127, 52, -70, 8, -13, 47, 22, -53, 107, 60, 104, -89, -72, -8, -95, 10, 61, 80, -6, -119, 32, 0, 104, -25,
            -109, -8, -125, -44, 86, -92, -92, 124, -12, 81, -79, 19, -62, 91, -90, -44, 57, -79, 111, 36, -127, -33, -103, -37, 13, -39, 26,
            -92, 53, 68, 101, -20, 78, 93, -19, 95, -128, -58, -22, -78, -53, 99, 0, 84, -93, 98, 68, 90, -40, 44, 114, -31, -60, -121, 84,
            -54, 11, 27, -109, 6, 106, 47, 103, -93, 76, -71, 80, -44, 60, 29, 24, 103, -45, 50, 43, 61, -83, -4, 106, 47, 66, 56, -69, -53,
            -33, 4, -78, 48, 12, -46, -67, -29, -112, 38, -19, 14, 73, -77, 82, 96, 40, 84, 107, 71, 21, 72, 97, 62, 90, -80, 86, 32, 48, -115,
            -80, -71, -118, -120, 124, 10, -107, -70, 63, 37, 94, -114, -35, -64, 0, 92, -31, 126, 110, -46, 48, -119, -118, 93, 70, 102, 81,
            -122, -126, -32, -34, -110, -52, -17, 63, -121, -18, -13, -79, 125, 80, 127, -90, 30, -81, 8, 94, -69, 75, 7, -86, 127, 93, 22,
            -50, 31, -102, -27, 45, 110, 51, -104, -106, -98, -122, -83, 94, -83, -114, -24, -99, 73, 106, 103, 83, 3, -56, 123, 24, -77,
            99, 89, 23, 91, -113, -77, 65, -24, 100, -43, 114, -70, -114, 98, 82, -50, -87, 53, -13, 19, -58, -92, -65, 32, 24, 60, -19,
            -128, -76, 97, -1, -8, -67, 69, -1, -17, 41, 69, 100, 73, 119, -69, -49, -123, -47, 13, -66, -32, 83, 44, -70, -10, -28, 27,
            13, 67, -34, 40, 7, -113, -59, 13, 127, 3, -67, -52, -32, 34, 123, 109, 47, 72, -6, 13, -62, -123, -26, -44, -83, 55, -51,
            -63, -67, -68, -106, 38, 78, 98, 82, -82, 109, 81, 49, -105, -116, -15, 0, 69, -113, 110, -114, 49, 112, 4, 14, -92, 1, -25,
            -112, -6, 110, -59, -124, 56, 89, -97, -74, 91, 120, 69, -98, 20, -28, 81, 107, -36, -107, 4, -28, 31, -47, 105, -1, 106, -107,
            -123, 34, -32, 46, 3, -34, -48, -10, -72, 21, -126, -116, 124, 57, -88, -121, 110, -64, 69, 30, -93, 66, -46, 81, 22, 74, -84,
            -109, 49, 21, 89, -84, -62, -56, -19, 62, 50, 96, 117, 72, 61, 115, 71, 29, 105, 68, 100, 116, 24, 89, -56, -106, -81, 85, -16,
            67, 69, 68, -103, -69, -7, 24, 90, 61, 14, 4, -76, -121, 3, 6, 15, -22, -91, -42, 27, 40, -80, -22, 48, 121, -64, -41, 119, 5,
            127, 117, 116, 124, -23, -104, -70, 81, 37, -121, -58, -39, 40, -79, -92, -119, -1, -103, -64, -27, 97, 79, -32, -11, -28, 9
            , 47, -89, -105, 1, -39, -61, -4, 36, -64, -68, 5, -73, -112, -38, -120, -40, -101, -38, -20, 108, -105, 8, -45, 105, -90, -96,
            110, -35, 0, -84, -88, -37, 47, -58, -124, 13, -35, 118, 15, 76, 117, -40, 34, 124, -54, -5, -105, 24, 11, -68, -78, -120, -28,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

    @Test
    public void testParallel() throws Exception {
        FactorialParallel factorial = new FactorialParallel();
        doTest(factorial::calc);
    }

    @Test
    public void testParallelTree() throws Exception {
        doTest(FactorialParallelTree::calc);
    }

    private void doTest(Function<Integer, BigInteger> calculator) throws Exception {

        assertEquals(BigInteger.valueOf(120), calculator.apply(5));
        assertEquals(BigInteger.valueOf(720), calculator.apply(6));
        assertEquals(BigInteger.valueOf(5040), calculator.apply(7));
        assertEquals(BigInteger.valueOf(40320), calculator.apply(8));
        assertEquals(BigInteger.valueOf(362880), calculator.apply(9));
        assertEquals(BigInteger.valueOf(2432902008176640000L), calculator.apply(20));
        assertEquals(new BigInteger(bytes), calculator.apply(2000));
    }

}